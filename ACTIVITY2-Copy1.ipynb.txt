{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "f3b0ff98-7231-400b-9d7c-9be24bd2b81a",
   "metadata": {},
   "source": [
    "<H1> ACTIVITY #2 :UK ACCIDENTS </H1>\n",
    "<hr>\n",
    "<h3> Analysts : Quert Russel Lalisan</h3>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4d9295b8-1bc1-4d1a-ae1b-8d74296d5ea8",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.stats import f_oneway\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "2cc23cbc-0e18-4283-94f4-370fef112eff",
   "metadata": {},
   "outputs": [],
   "source": [
    "accident = pd.read_csv('dataset\\\\uk_road_accident.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f2be5c16-8d83-4d80-8724-0e7d67f36d36",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Index</th>\n",
       "      <th>Accident_Severity</th>\n",
       "      <th>Accident Date</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Light_Conditions</th>\n",
       "      <th>District Area</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Number_of_Casualties</th>\n",
       "      <th>Number_of_Vehicles</th>\n",
       "      <th>Road_Surface_Conditions</th>\n",
       "      <th>Road_Type</th>\n",
       "      <th>Urban_or_Rural_Area</th>\n",
       "      <th>Weather_Conditions</th>\n",
       "      <th>Vehicle_Type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>200701BS64157</td>\n",
       "      <td>Serious</td>\n",
       "      <td>5/6/2019</td>\n",
       "      <td>51.506187</td>\n",
       "      <td>Darkness - lights lit</td>\n",
       "      <td>Kensington and Chelsea</td>\n",
       "      <td>-0.209082</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Dry</td>\n",
       "      <td>Single carriageway</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Fine no high winds</td>\n",
       "      <td>Car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>200701BS65737</td>\n",
       "      <td>Serious</td>\n",
       "      <td>2/7/2019</td>\n",
       "      <td>51.495029</td>\n",
       "      <td>Daylight</td>\n",
       "      <td>Kensington and Chelsea</td>\n",
       "      <td>-0.173647</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Wet or damp</td>\n",
       "      <td>Single carriageway</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Raining no high winds</td>\n",
       "      <td>Car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>200701BS66127</td>\n",
       "      <td>Serious</td>\n",
       "      <td>26-08-2019</td>\n",
       "      <td>51.517715</td>\n",
       "      <td>Darkness - lighting unknown</td>\n",
       "      <td>Kensington and Chelsea</td>\n",
       "      <td>-0.210215</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Dry</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Taxi/Private hire car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>200701BS66128</td>\n",
       "      <td>Serious</td>\n",
       "      <td>16-08-2019</td>\n",
       "      <td>51.495478</td>\n",
       "      <td>Daylight</td>\n",
       "      <td>Kensington and Chelsea</td>\n",
       "      <td>-0.202731</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>Dry</td>\n",
       "      <td>Single carriageway</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Fine no high winds</td>\n",
       "      <td>Bus or coach (17 or more pass seats)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>200701BS66837</td>\n",
       "      <td>Slight</td>\n",
       "      <td>3/9/2019</td>\n",
       "      <td>51.488576</td>\n",
       "      <td>Darkness - lights lit</td>\n",
       "      <td>Kensington and Chelsea</td>\n",
       "      <td>-0.192487</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Dry</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Urban</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Other vehicle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>660674</th>\n",
       "      <td>201091NM01760</td>\n",
       "      <td>Slight</td>\n",
       "      <td>18-02-2022</td>\n",
       "      <td>57.374005</td>\n",
       "      <td>Daylight</td>\n",
       "      <td>Highland</td>\n",
       "      <td>-3.467828</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>Dry</td>\n",
       "      <td>Single carriageway</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Fine no high winds</td>\n",
       "      <td>Car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>660675</th>\n",
       "      <td>201091NM01881</td>\n",
       "      <td>Slight</td>\n",
       "      <td>21-02-2022</td>\n",
       "      <td>57.232273</td>\n",
       "      <td>Darkness - no lighting</td>\n",
       "      <td>Highland</td>\n",
       "      <td>-3.809281</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Frost or ice</td>\n",
       "      <td>Single carriageway</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Fine no high winds</td>\n",
       "      <td>Car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>660676</th>\n",
       "      <td>201091NM01935</td>\n",
       "      <td>Slight</td>\n",
       "      <td>23-02-2022</td>\n",
       "      <td>57.585044</td>\n",
       "      <td>Daylight</td>\n",
       "      <td>Highland</td>\n",
       "      <td>-3.862727</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Frost or ice</td>\n",
       "      <td>Single carriageway</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Fine no high winds</td>\n",
       "      <td>Car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>660677</th>\n",
       "      <td>201091NM01964</td>\n",
       "      <td>Serious</td>\n",
       "      <td>23-02-2022</td>\n",
       "      <td>57.214898</td>\n",
       "      <td>Darkness - no lighting</td>\n",
       "      <td>Highland</td>\n",
       "      <td>-3.823997</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Wet or damp</td>\n",
       "      <td>Single carriageway</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Fine no high winds</td>\n",
       "      <td>Motorcycle over 500cc</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>660678</th>\n",
       "      <td>201091NM02142</td>\n",
       "      <td>Serious</td>\n",
       "      <td>28-02-2022</td>\n",
       "      <td>57.575210</td>\n",
       "      <td>Daylight</td>\n",
       "      <td>Highland</td>\n",
       "      <td>-3.895673</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Wet or damp</td>\n",
       "      <td>Dual carriageway</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Snowing no high winds</td>\n",
       "      <td>Car</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>660679 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                Index Accident_Severity Accident Date   Latitude  \\\n",
       "0       200701BS64157           Serious      5/6/2019  51.506187   \n",
       "1       200701BS65737           Serious      2/7/2019  51.495029   \n",
       "2       200701BS66127           Serious    26-08-2019  51.517715   \n",
       "3       200701BS66128           Serious    16-08-2019  51.495478   \n",
       "4       200701BS66837            Slight      3/9/2019  51.488576   \n",
       "...               ...               ...           ...        ...   \n",
       "660674  201091NM01760            Slight    18-02-2022  57.374005   \n",
       "660675  201091NM01881            Slight    21-02-2022  57.232273   \n",
       "660676  201091NM01935            Slight    23-02-2022  57.585044   \n",
       "660677  201091NM01964           Serious    23-02-2022  57.214898   \n",
       "660678  201091NM02142           Serious    28-02-2022  57.575210   \n",
       "\n",
       "                   Light_Conditions           District Area  Longitude  \\\n",
       "0             Darkness - lights lit  Kensington and Chelsea  -0.209082   \n",
       "1                          Daylight  Kensington and Chelsea  -0.173647   \n",
       "2       Darkness - lighting unknown  Kensington and Chelsea  -0.210215   \n",
       "3                          Daylight  Kensington and Chelsea  -0.202731   \n",
       "4             Darkness - lights lit  Kensington and Chelsea  -0.192487   \n",
       "...                             ...                     ...        ...   \n",
       "660674                     Daylight                Highland  -3.467828   \n",
       "660675       Darkness - no lighting                Highland  -3.809281   \n",
       "660676                     Daylight                Highland  -3.862727   \n",
       "660677       Darkness - no lighting                Highland  -3.823997   \n",
       "660678                     Daylight                Highland  -3.895673   \n",
       "\n",
       "        Number_of_Casualties  Number_of_Vehicles Road_Surface_Conditions  \\\n",
       "0                          1                   2                     Dry   \n",
       "1                          1                   2             Wet or damp   \n",
       "2                          1                   3                     Dry   \n",
       "3                          1                   4                     Dry   \n",
       "4                          1                   2                     Dry   \n",
       "...                      ...                 ...                     ...   \n",
       "660674                     2                   1                     Dry   \n",
       "660675                     1                   1            Frost or ice   \n",
       "660676                     1                   3            Frost or ice   \n",
       "660677                     1                   2             Wet or damp   \n",
       "660678                     1                   1             Wet or damp   \n",
       "\n",
       "                 Road_Type Urban_or_Rural_Area     Weather_Conditions  \\\n",
       "0       Single carriageway               Urban     Fine no high winds   \n",
       "1       Single carriageway               Urban  Raining no high winds   \n",
       "2                      NaN               Urban                    NaN   \n",
       "3       Single carriageway               Urban     Fine no high winds   \n",
       "4                      NaN               Urban                    NaN   \n",
       "...                    ...                 ...                    ...   \n",
       "660674  Single carriageway               Rural     Fine no high winds   \n",
       "660675  Single carriageway               Rural     Fine no high winds   \n",
       "660676  Single carriageway               Rural     Fine no high winds   \n",
       "660677  Single carriageway               Rural     Fine no high winds   \n",
       "660678    Dual carriageway               Rural  Snowing no high winds   \n",
       "\n",
       "                                Vehicle_Type  \n",
       "0                                        Car  \n",
       "1                                        Car  \n",
       "2                      Taxi/Private hire car  \n",
       "3       Bus or coach (17 or more pass seats)  \n",
       "4                              Other vehicle  \n",
       "...                                      ...  \n",
       "660674                                   Car  \n",
       "660675                                   Car  \n",
       "660676                                   Car  \n",
       "660677                 Motorcycle over 500cc  \n",
       "660678                                   Car  \n",
       "\n",
       "[660679 rows x 14 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accident"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c00e7b32-4a54-40db-8e4b-4e254682fce8",
   "metadata": {},
   "outputs": [],
   "source": [
    "accident.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e54d8ccf-f7fd-4d85-b96d-b06ed9889499",
   "metadata": {},
   "outputs": [],
   "source": [
    "accident.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2cca2350-bf63-4fd1-9395-dd64c1086588",
   "metadata": {},
   "outputs": [],
   "source": [
    "accident['Latitude'] = accident['Latitude'].fillna(accident['Latitude'].mean())\n",
    "accident['Longitude'] = accident['Longitude'].fillna(accident['Longitude'].mean())\n",
    "accident['Road_Surface_Conditions'] = accident['Road_Surface_Conditions'].fillna(accident['Road_Surface_Conditions'].mode()[0])\n",
    "accident['Road_Type'] = accident['Road_Type'].fillna(accident['Road_Type'].mode()[0])\n",
    "accident['Urban_or_Rural_Area'] = accident['Urban_or_Rural_Area'].fillna(accident['Urban_or_Rural_Area'].mode()[0])\n",
    "accident['Weather_Conditions'] = accident['Weather_Conditions'].fillna(accident['Weather_Conditions'].mode()[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bfce6134-d4a4-43d1-9d6f-d79faa5c18fc",
   "metadata": {},
   "source": [
    "<h1> CLearing Any Inconsistencies with the Data Set</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bf7bf3f2-401d-4e7e-a28a-0220bd8b2093",
   "metadata": {},
   "outputs": [],
   "source": [
    "accident['Accident Date'] = accident['Accident Date'].str.strip()\n",
    "\n",
    "accident['Accident Date'] = accident['Accident Date'].astype('str')\n",
    "\n",
    "accident['Accident Date'] = accident['Accident Date'].str.replace('/', '-')\n",
    "\n",
    "accident['Accident Date'] = pd.to_datetime(accident['Accident Date'], dayfirst = True, errors = 'coerce')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "11371c4a-033e-4b5e-bbe5-4c56da18f625",
   "metadata": {},
   "outputs": [],
   "source": [
    "accident['Year'] = accident['Accident Date'].dt.year\n",
    "accident['Month'] = accident['Accident Date'].dt.month\n",
    "accident['Day'] = accident['Accident Date'].dt.day\n",
    "accident['DayOfWeek'] = accident['Accident Date'].dt.dayofweek"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "bb97980c-c78d-4390-9f72-2a2e680721df",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index                      0\n",
       "Accident_Severity          0\n",
       "Accident Date              0\n",
       "Latitude                   0\n",
       "Light_Conditions           0\n",
       "District Area              0\n",
       "Longitude                  0\n",
       "Number_of_Casualties       0\n",
       "Number_of_Vehicles         0\n",
       "Road_Surface_Conditions    0\n",
       "Road_Type                  0\n",
       "Urban_or_Rural_Area        0\n",
       "Weather_Conditions         0\n",
       "Vehicle_Type               0\n",
       "Year                       0\n",
       "Month                      0\n",
       "Day                        0\n",
       "DayOfWeek                  0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accident.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5aef9e24-cccb-43c5-bb6b-911cd57d3bbb",
   "metadata": {},
   "source": [
    "<h1> Questions and Insights</h1>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee34b301-7afc-4c28-8971-e9a398f73724",
   "metadata": {},
   "source": [
    "<h1>1) What is the overall distribution of Accident Severity (e.g., Fatal, Serious, Slight)?</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "1f814516-6646-4986-b3cb-e401ded5559a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Accident_Severity\n",
       "Slight     563801\n",
       "Serious     88217\n",
       "Fatal        8661\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accident['Accident_Severity'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bfd8908a-2881-4121-a4ea-6b590617cb9f",
   "metadata": {},
   "source": [
    "<h2>Insights 1 ) : The overall distribution of Accidents severity are </h2>\n",
    "<h4>from the lowest being Fatal with 8661 recorded accidents<br>from the middle range being Serious with 88217 recorded accidents<br>from the lowest being Fatal with 563801 recorded accidents</h4>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "23b6990f-a20d-4d01-a9a3-fe6e24f14a38",
   "metadata": {},
   "source": [
    "<h1>2) Which District Area reports the highest number of severe accidents?</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "7b42bb1e-1df3-4d0c-ac94-2e20c4b3301f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Accident_Severity  District Area           \n",
       "Fatal              Birmingham                  105\n",
       "                   Leeds                        93\n",
       "                   Highland                     88\n",
       "                   East Riding of Yorkshire     85\n",
       "                   Bradford                     71\n",
       "                                              ... \n",
       "Slight             Berwick-upon-Tweed          121\n",
       "                   Shetland Islands            113\n",
       "                   Teesdale                    110\n",
       "                   Orkney Islands               96\n",
       "                   Clackmannanshire             72\n",
       "Name: count, Length: 1266, dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accident.groupby('Accident_Severity')['District Area'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "896249cd-52d2-4465-8929-c56979019d7d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count           8661\n",
       "unique           422\n",
       "top       Birmingham\n",
       "freq             105\n",
       "Name: District Area, dtype: object"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accident[accident['Accident_Severity'] == 'Fatal']['District Area'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "f3bd674c-7aec-4526-aabc-7a6e88d30153",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count          88217\n",
       "unique           422\n",
       "top       Birmingham\n",
       "freq            1474\n",
       "Name: District Area, dtype: object"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accident[accident['Accident_Severity'] == 'Serious']['District Area'].describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d9835de0-e935-42d9-affe-9c2634181205",
   "metadata": {},
   "source": [
    "<h2>Insights 2) : The District Area with highest Severity of accident  is <b>\"Birmingham\"</b> </h2>\n",
    "<h4> With a toal value of <b> 105 Fatal accidents </b> only in Birmingham <br> and a total value of <b> 1474 Fatal accidents  </b>in Birmingham </h4>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "75d16453-80dc-4121-8496-5385529b083a",
   "metadata": {},
   "source": [
    "<h1>3) How does the number of casualties differ by Accident Severity?</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "6b62b305-d1fb-456c-a903-522815615e00",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Accident_Severity</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Fatal</th>\n",
       "      <td>8661.0</td>\n",
       "      <td>1.903129</td>\n",
       "      <td>1.901614</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>68.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Serious</th>\n",
       "      <td>88217.0</td>\n",
       "      <td>1.467280</td>\n",
       "      <td>1.027915</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>45.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Slight</th>\n",
       "      <td>563801.0</td>\n",
       "      <td>1.331402</td>\n",
       "      <td>0.754502</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>47.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      count      mean       std  min  25%  50%  75%   max\n",
       "Accident_Severity                                                        \n",
       "Fatal                8661.0  1.903129  1.901614  1.0  1.0  1.0  2.0  68.0\n",
       "Serious             88217.0  1.467280  1.027915  1.0  1.0  1.0  2.0  45.0\n",
       "Slight             563801.0  1.331402  0.754502  1.0  1.0  1.0  1.0  47.0"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accident.groupby('Accident_Severity')['Number_of_Casualties'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "e167d130-3f41-4639-8b31-92032d171bf5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Accident_Severity\n",
       "Fatal      1.903129\n",
       "Serious    1.467280\n",
       "Slight     1.331402\n",
       "Name: Number_of_Casualties, dtype: float64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accident.groupby('Accident_Severity')['Number_of_Casualties'].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "748d1ca6-3d35-4da8-9bee-bec1c40b3731",
   "metadata": {},
   "source": [
    "<h2> Insights 3 ) : The number of Casualties by Accident severity (Serious, Slight, Fatal) </h2>\n",
    "<h4> Most accidents across all severity levels involve only one casualty, but Fatal accidents tend to have more people affected on average (â‰ˆ1.9 per accident) compared to Serious (â‰ˆ1.5) and Slight (â‰ˆ1.3). This suggests that when an accident is fatal, it is more likely to involve multiple casualties, and although rare, some accidents can result in extremely high casualty counts (up to 68).</h4>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dedeb727-e7f0-4704-ad09-16b3b60beef5",
   "metadata": {},
   "source": [
    "<h1>4) On average, how many vehicles are involved in accidents by severity level?</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "5081320a-9bb6-4ae0-9007-f3e6ffb27740",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Accident_Severity</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Fatal</th>\n",
       "      <td>8661.0</td>\n",
       "      <td>1.786976</td>\n",
       "      <td>1.022719</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Serious</th>\n",
       "      <td>88217.0</td>\n",
       "      <td>1.678327</td>\n",
       "      <td>0.751475</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>19.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Slight</th>\n",
       "      <td>563801.0</td>\n",
       "      <td>1.855864</td>\n",
       "      <td>0.700571</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>32.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      count      mean       std  min  25%  50%  75%   max\n",
       "Accident_Severity                                                        \n",
       "Fatal                8661.0  1.786976  1.022719  1.0  1.0  2.0  2.0  28.0\n",
       "Serious             88217.0  1.678327  0.751475  1.0  1.0  2.0  2.0  19.0\n",
       "Slight             563801.0  1.855864  0.700571  1.0  1.0  2.0  2.0  32.0"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accident.groupby('Accident_Severity')['Number_of_Vehicles'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d840faf2-d1c1-40f6-b652-46325ec7d48c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Accident_Severity\n",
       "Fatal      1.786976\n",
       "Serious    1.678327\n",
       "Slight     1.855864\n",
       "Name: Number_of_Vehicles, dtype: float64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accident.groupby('Accident_Severity')['Number_of_Vehicles'].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8853e3b4-0ecd-491e-9246-e88a0508128a",
   "metadata": {},
   "source": [
    "<h2> Insights 4) : </h2> \n",
    " <h4>   <br> For every severity level there is an average of <b>1.786976 vehicles</b> for cases that has severity of fatal, <b>1.678327 vehicles</b> for cases that are serious, whilst on Slight <b> 1.855864 vehicles</b> involve in accidents</h4>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ff039b9-ddd9-4f82-9c4b-c328c4646c5c",
   "metadata": {},
   "source": [
    "<h1>5) Which dates had the highest accident counts?</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "368e34da-31c3-4dcb-90ac-299e619e2793",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Accident Date\n",
       "2019-11-30    704\n",
       "2019-01-31    697\n",
       "2019-07-13    692\n",
       "2021-11-13    692\n",
       "2019-08-14    688\n",
       "             ... \n",
       "2022-12-30    171\n",
       "2019-12-25    157\n",
       "2022-12-25    145\n",
       "2022-01-10    123\n",
       "2020-12-25    118\n",
       "Name: count, Length: 1461, dtype: int64"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accident['Accident Date'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5e712f51-4fc6-45a0-998e-9d1b8a39a2a1",
   "metadata": {},
   "source": [
    "<h2> Insights 5) : The top 3 dates with the highest accidents occured are the following  </h2>\n",
    "<h4>- November 11, 2019 </b> with <b> 704 accidents </b> that happened <br>  <b>- January 1, 2019 </b> with <b> 697 accidents </b> that occured<br> <b>- July 13, 2019 </b> with <b> 692 accidents </b> that occured</h4>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f11bc109-9eda-4259-b287-d65bd2e66a8d",
   "metadata": {},
   "source": [
    "<h1>6) Is accident severity correlated with the number of casualties??</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "53921f3d-e84c-4e5a-a794-5e9d646eaa8f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Accident Date</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Number_of_Casualties</th>\n",
       "      <th>Number_of_Vehicles</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>Day</th>\n",
       "      <th>DayOfWeek</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>660679</td>\n",
       "      <td>660679.000000</td>\n",
       "      <td>660679.000000</td>\n",
       "      <td>660679.000000</td>\n",
       "      <td>660679.000000</td>\n",
       "      <td>660679.000000</td>\n",
       "      <td>660679.000000</td>\n",
       "      <td>660679.000000</td>\n",
       "      <td>660679.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2020-11-30 08:30:32.761749760</td>\n",
       "      <td>52.553866</td>\n",
       "      <td>-1.431210</td>\n",
       "      <td>1.357040</td>\n",
       "      <td>1.831255</td>\n",
       "      <td>2020.409090</td>\n",
       "      <td>6.607965</td>\n",
       "      <td>15.581350</td>\n",
       "      <td>3.111195</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>2019-01-01 00:00:00</td>\n",
       "      <td>49.914430</td>\n",
       "      <td>-7.516225</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2019.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2019-11-27 00:00:00</td>\n",
       "      <td>51.490696</td>\n",
       "      <td>-2.332191</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2019.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2020-11-13 00:00:00</td>\n",
       "      <td>52.315755</td>\n",
       "      <td>-1.411761</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2020.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2021-11-17 00:00:00</td>\n",
       "      <td>53.453444</td>\n",
       "      <td>-0.232901</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2021.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>5.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2022-12-31 00:00:00</td>\n",
       "      <td>60.757544</td>\n",
       "      <td>1.762010</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>32.000000</td>\n",
       "      <td>2022.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>6.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>NaN</td>\n",
       "      <td>1.406896</td>\n",
       "      <td>1.383302</td>\n",
       "      <td>0.824847</td>\n",
       "      <td>0.715269</td>\n",
       "      <td>1.109152</td>\n",
       "      <td>3.420701</td>\n",
       "      <td>8.764863</td>\n",
       "      <td>1.927284</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Accident Date       Latitude      Longitude  \\\n",
       "count                         660679  660679.000000  660679.000000   \n",
       "mean   2020-11-30 08:30:32.761749760      52.553866      -1.431210   \n",
       "min              2019-01-01 00:00:00      49.914430      -7.516225   \n",
       "25%              2019-11-27 00:00:00      51.490696      -2.332191   \n",
       "50%              2020-11-13 00:00:00      52.315755      -1.411761   \n",
       "75%              2021-11-17 00:00:00      53.453444      -0.232901   \n",
       "max              2022-12-31 00:00:00      60.757544       1.762010   \n",
       "std                              NaN       1.406896       1.383302   \n",
       "\n",
       "       Number_of_Casualties  Number_of_Vehicles           Year          Month  \\\n",
       "count         660679.000000       660679.000000  660679.000000  660679.000000   \n",
       "mean               1.357040            1.831255    2020.409090       6.607965   \n",
       "min                1.000000            1.000000    2019.000000       1.000000   \n",
       "25%                1.000000            1.000000    2019.000000       4.000000   \n",
       "50%                1.000000            2.000000    2020.000000       7.000000   \n",
       "75%                1.000000            2.000000    2021.000000      10.000000   \n",
       "max               68.000000           32.000000    2022.000000      12.000000   \n",
       "std                0.824847            0.715269       1.109152       3.420701   \n",
       "\n",
       "                 Day      DayOfWeek  \n",
       "count  660679.000000  660679.000000  \n",
       "mean       15.581350       3.111195  \n",
       "min         1.000000       0.000000  \n",
       "25%         8.000000       1.000000  \n",
       "50%        16.000000       3.000000  \n",
       "75%        23.000000       5.000000  \n",
       "max        31.000000       6.000000  \n",
       "std         8.764863       1.927284  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accident.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "4febaf55-b176-48cb-be83-195604c65f19",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "unsupported operand type(s) for /: 'str' and 'int'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[20], line 6\u001b[0m\n\u001b[0;32m      1\u001b[0m groups \u001b[38;5;241m=\u001b[39m [\n\u001b[0;32m      2\u001b[0m     grp[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mIndex\u001b[39m\u001b[38;5;124m\"\u001b[39m]\u001b[38;5;241m.\u001b[39mvalues\n\u001b[0;32m      3\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m name, grp \u001b[38;5;129;01min\u001b[39;00m accident\u001b[38;5;241m.\u001b[39mgroupby(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mAccident_Severity\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m      4\u001b[0m ]\n\u001b[1;32m----> 6\u001b[0m f_stat, p_val \u001b[38;5;241m=\u001b[39m \u001b[43mf_oneway\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mgroups\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m      8\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mF-statistic:\u001b[39m\u001b[38;5;124m\"\u001b[39m, f_stat)\n\u001b[0;32m      9\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mp-value:\u001b[39m\u001b[38;5;124m\"\u001b[39m, p_val)\n",
      "File \u001b[1;32m~\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python313\\site-packages\\scipy\\stats\\_axis_nan_policy.py:586\u001b[0m, in \u001b[0;36m_axis_nan_policy_factory.<locals>.axis_nan_policy_decorator.<locals>.axis_nan_policy_wrapper\u001b[1;34m(***failed resolving arguments***)\u001b[0m\n\u001b[0;32m    583\u001b[0m     res \u001b[38;5;241m=\u001b[39m _add_reduced_axes(res, reduced_axes, keepdims)\n\u001b[0;32m    584\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m tuple_to_result(\u001b[38;5;241m*\u001b[39mres)\n\u001b[1;32m--> 586\u001b[0m res \u001b[38;5;241m=\u001b[39m \u001b[43mhypotest_fun_out\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43msamples\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    587\u001b[0m res \u001b[38;5;241m=\u001b[39m result_to_tuple(res, n_out)\n\u001b[0;32m    588\u001b[0m res \u001b[38;5;241m=\u001b[39m _add_reduced_axes(res, reduced_axes, keepdims)\n",
      "File \u001b[1;32m~\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python313\\site-packages\\scipy\\stats\\_stats_py.py:3903\u001b[0m, in \u001b[0;36mf_oneway\u001b[1;34m(axis, *samples)\u001b[0m\n\u001b[0;32m   3897\u001b[0m all_same_const \u001b[38;5;241m=\u001b[39m (_first(alldata, axis) \u001b[38;5;241m==\u001b[39m alldata)\u001b[38;5;241m.\u001b[39mall(axis\u001b[38;5;241m=\u001b[39maxis)\n\u001b[0;32m   3899\u001b[0m \u001b[38;5;66;03m# Determine the mean of the data, and subtract that from all inputs to a\u001b[39;00m\n\u001b[0;32m   3900\u001b[0m \u001b[38;5;66;03m# variance (via sum_of_sq / sq_of_sum) calculation.  Variance is invariant\u001b[39;00m\n\u001b[0;32m   3901\u001b[0m \u001b[38;5;66;03m# to a shift in location, and centering all data around zero vastly\u001b[39;00m\n\u001b[0;32m   3902\u001b[0m \u001b[38;5;66;03m# improves numerical stability.\u001b[39;00m\n\u001b[1;32m-> 3903\u001b[0m offset \u001b[38;5;241m=\u001b[39m \u001b[43malldata\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mmean\u001b[49m\u001b[43m(\u001b[49m\u001b[43maxis\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43maxis\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkeepdims\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m)\u001b[49m\n\u001b[0;32m   3904\u001b[0m alldata \u001b[38;5;241m=\u001b[39m alldata \u001b[38;5;241m-\u001b[39m offset\n\u001b[0;32m   3906\u001b[0m normalized_ss \u001b[38;5;241m=\u001b[39m _square_of_sums(alldata, axis\u001b[38;5;241m=\u001b[39maxis) \u001b[38;5;241m/\u001b[39m bign\n",
      "File \u001b[1;32m~\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python313\\site-packages\\numpy\\_core\\_methods.py:137\u001b[0m, in \u001b[0;36m_mean\u001b[1;34m(a, axis, dtype, out, keepdims, where)\u001b[0m\n\u001b[0;32m    135\u001b[0m ret \u001b[38;5;241m=\u001b[39m umr_sum(arr, axis, dtype, out, keepdims, where\u001b[38;5;241m=\u001b[39mwhere)\n\u001b[0;32m    136\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(ret, mu\u001b[38;5;241m.\u001b[39mndarray):\n\u001b[1;32m--> 137\u001b[0m     ret \u001b[38;5;241m=\u001b[39m \u001b[43mum\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mtrue_divide\u001b[49m\u001b[43m(\u001b[49m\n\u001b[0;32m    138\u001b[0m \u001b[43m            \u001b[49m\u001b[43mret\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrcount\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mout\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mret\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcasting\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43munsafe\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msubok\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m)\u001b[49m\n\u001b[0;32m    139\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m is_float16_result \u001b[38;5;129;01mand\u001b[39;00m out \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m    140\u001b[0m         ret \u001b[38;5;241m=\u001b[39m arr\u001b[38;5;241m.\u001b[39mdtype\u001b[38;5;241m.\u001b[39mtype(ret)\n",
      "\u001b[1;31mTypeError\u001b[0m: unsupported operand type(s) for /: 'str' and 'int'"
     ]
    }
   ],
   "source": [
    "groups = [\n",
    "    grp[\"Index\"].values\n",
    "    for name, grp in accident.groupby(\"Accident_Severity\")\n",
    "]\n",
    "\n",
    "f_stat, p_val = f_oneway(*groups)\n",
    "\n",
    "print(\"F-statistic:\", f_stat)\n",
    "print(\"p-value:\", p_val)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c4b957cf-70dc-4b67-888f-ae826031c411",
   "metadata": {},
   "source": [
    "<h2> Insights 6) </h2>\n",
    "<h4>: There are no correlation between Severity of accidents to the number of casualties</h4>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c46f8e90-98c7-4cf1-8975-ebe54d80a7da",
   "metadata": {},
   "source": [
    "<h1>7) Do accidents cluster more in urban or rural areas?</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b7660117-aeb4-411c-a0d5-5778eb690b51",
   "metadata": {},
   "outputs": [],
   "source": [
    "accident['Urban_or_Rural_Area'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9d667402-b163-4f4c-8cf8-ffca8c57db85",
   "metadata": {},
   "source": [
    "<h2> Insights 7) </h2>\n",
    "<h4>: According to the Data accidents usually happens on Urban areas with 421,678 cases of accidents and 238,990 cases on Rural areas </h4>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ece74128-8e43-4532-aaba-91c73eec231b",
   "metadata": {},
   "source": [
    "<h1>8) Is there a correlation between the number of vehicles involved and the number of casualties?</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f0521103-00f6-494f-b2b4-fc759b361c50",
   "metadata": {},
   "outputs": [],
   "source": [
    "accident['Number_of_Vehicles'].corr(accident['Number_of_Casualties'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3168d194-3af1-4520-a115-6c7902168ff4",
   "metadata": {},
   "source": [
    "<h2> Insights 8) :</h2>\n",
    "    <h4> There is a <b> Weak positive correlation (0.22) </b> between The number of Vehicles involved and the number of casualties as the results showed </h4>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79955f31-71d4-41b1-a6f6-d962121efb24",
   "metadata": {},
   "source": [
    "<h1>9) How do Weather Conditions impact accident severity?</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6d4b21de-5c7d-4825-bc00-14d52be85715",
   "metadata": {},
   "outputs": [],
   "source": [
    "accident.groupby('Accident_Severity')['Weather_Conditions'].describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "93eae133-27f9-4eb3-afec-6a1944648bfc",
   "metadata": {},
   "source": [
    "<h2> Insights 9) : </h2>\n",
    "    <h4> The weather doesn't seem to impact the Severity of accidents, as most accidents happens during <b> Fine no high winds </b> rather than what was thought to be rainy days</h4>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7e93255c-12d1-4b2c-b2e1-d784228493e3",
   "metadata": {},
   "source": [
    "<h1>10) What is the relationship between Light Conditions (daylight, darkness, streetlights) and accidents?</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0b287c31-aef4-4928-9efb-b9be508cf227",
   "metadata": {},
   "outputs": [],
   "source": [
    "from scipy.stats import f_oneway\n",
    "\n",
    "groups = [\n",
    "    grp[\"Number_of_Casualties\"].dropna().values\n",
    "    for name, grp in accident.groupby(\"Light_Conditions\")\n",
    "]\n",
    "\n",
    "f_stat, p_val = f_oneway(*groups)\n",
    "\n",
    "print(\"F-statistic:\", f_stat)\n",
    "print(\"p-value:\", p_val)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "497f73cf-6c03-4dac-8a8a-98809d0f32f0",
   "metadata": {},
   "outputs": [],
   "source": [
    "acc = accident['Light_Conditions'].value_counts()\n",
    "acc"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "27e46e58-74e9-46a3-a974-32f05d5c2fb4",
   "metadata": {},
   "source": [
    "<h2> Insights 10) : </h2>\n",
    "<h4> According to the data There is a lot more accidents that happens on Broad Daylight as it was during night hours when there are no Lights</h>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a2f645b-6746-46ee-b399-5d5b7749a749",
   "metadata": {},
   "source": [
    "<h2> Insights 11) : </h2>\n",
    "<h4> According to the data the is no relation between Light conditions and accident</h4>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ec6810a9-07f0-42b5-ba91-0ddd6043e97a",
   "metadata": {},
   "source": [
    "<h1>11) Do Road Surface Conditions (dry, wet, icy) affect the number of casualties?</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bba5ba7b-1596-45a4-8825-24e39c162043",
   "metadata": {},
   "outputs": [],
   "source": [
    "accident.groupby('Road_Surface_Conditions')['Number_of_Casualties'].describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "241373c1-18e3-42ac-b79d-ea4199e13982",
   "metadata": {},
   "source": [
    "<h2> Insights 12) </h2>\n",
    "<h4> Road surface conditions does affect the number of Casualties, Having dry roads having the most amount of accidents occured compare to Wet,damp or snowy roads</h4>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "11ccf8ba-6a66-4783-9f9c-4dcb776714ac",
   "metadata": {},
   "source": [
    "<h1>12) Which Road Type (single carriageway, dual carriageway, roundabout, etc.) has the most accidents?</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f390d381-e2fc-4948-9d32-0a1d2eaf2d12",
   "metadata": {},
   "outputs": [],
   "source": [
    "accident['Road_Type'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3d286a6d-6c55-4c37-a3ba-af4089b26cb4",
   "metadata": {},
   "source": [
    "<h2> Insigths 13) : </h2>\n",
    "<h2> The type of road that has the most frequent accidents are <b> Single Carriageway </b> with a total number accidents of 496,663 </h2>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1badd9cd-8bf0-4244-838f-3dff5331693a",
   "metadata": {},
   "source": [
    "<h1>13) Which Vehicle Type is most frequently involved in accidents?</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "775834c3-d26a-453b-8830-5dccbbf119b2",
   "metadata": {},
   "outputs": [],
   "source": [
    "accident['Vehicle_Type'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "41d8aba7-d342-4d68-8ef8-761cd9729338",
   "metadata": {},
   "source": [
    "<h2> Insights 14) :</h2>\n",
    "<h4> Vehicles such as Cars, Van and Bus are the top 3 most frequently used vehicles that are involved in accidents. Car having <b> 497,992 involved accidents </b>, Van having <b> 34,160 involved accidents </b>, and Bus having<b> 25,878 involved accidents </b></h4>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "78cfae47-4e81-40d9-8414-acbd85719763",
   "metadata": {},
   "source": [
    "<h1>14) Do motorcycles vs. cars show higher casualty counts?</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c4cb92c5-c0e0-4f14-8322-085728417bae",
   "metadata": {},
   "outputs": [],
   "source": [
    "car = accident[accident['Vehicle_Type'] == 'Car'].count().sum()\n",
    "motor = accident[accident['Vehicle_Type'] == 'Motorcycle over 500cc'].count().sum()\n",
    "\n",
    "print(f'The amount accidents that happens on motorcycles are {motor}, while cars has {car}')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b251d8f0-1777-4f4c-87ce-a3453784173a",
   "metadata": {},
   "source": [
    "<h2> Insights 15) </h2>\n",
    "<h4> According to the data Cars shows a higher casualty counts having <b> 896,3856 </b> of casualties, over Motorcylces with <b> 461,826 </b> number of casualties </h4>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1d5f2890-f9b9-4051-9cb1-c4006897575a",
   "metadata": {},
   "source": [
    "<h1>15) What is the relationship between Number of Vehicles and Number of Casualties in an accident?</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3072be33-2f16-49e8-ab84-4f3818855abc",
   "metadata": {},
   "outputs": [],
   "source": [
    "accident['Number_of_Vehicles'].corr(accident['Number_of_Casualties'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "89084196-0fed-4aa3-93e9-8467d385a872",
   "metadata": {},
   "outputs": [],
   "source": [
    "accident.groupby('Number_of_Vehicles')['Number_of_Casualties'].count()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "23483a60-d965-4079-971e-0336b67dc134",
   "metadata": {},
   "source": [
    "<h2> Insights 16) :</h2><h4> There is a moderate positive correlation (r = 0.23) between the number of vehicles involved and the number of casualties. On average, single-vehicles accidents tend to result in more casualties than single-vehicle accidents.</h4>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "df65bff7-7bd3-4907-9a26-1059a1688f34",
   "metadata": {},
   "source": [
    "<h1>16) Are there particular District Areas where heavy vehicles cause more severe accidents?</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fc32d62f-ccc1-494a-9bc6-d4dcd37657d7",
   "metadata": {},
   "outputs": [],
   "source": [
    "accident.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "16c02fa6-4c53-4dda-9f85-a21684b3678c",
   "metadata": {},
   "outputs": [],
   "source": [
    "heavy_vehicles = [\n",
    "    'Bus or coach (17 or more pass seats)',\n",
    "    'Van / Goods 3.5 tonnes mgw or under',\n",
    "    'Motorcycle over 500cc',\n",
    "    'Goods over 3.5t. and under 7.5t',\n",
    "    'Agricultural vehicle',\n",
    "    'Minibus (8 - 16 passenger seats)'\n",
    "]\n",
    "\n",
    "# Filter for heavy vehicles\n",
    "cars = accident[accident['Vehicle_Type'].isin(heavy_vehicles)]\n",
    "\n",
    "accident_severe = cars.groupby(\n",
    "    ['Vehicle_Type', 'Accident_Severity']\n",
    ").size().reset_index(name='Count')\n",
    "\n",
    "top_severe = accident_severe.sort_values(by='Count', ascending=False)\n",
    "\n",
    "print(top_severe.head(10)) \n",
    "print(f\"total number of accident involving heavy cars on district areas is {accident_severe.value_counts().sum()}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bda82656-1c69-4803-bb01-3d0916d62b1e",
   "metadata": {},
   "outputs": [],
   "source": [
    "heavy_vehicles = [\n",
    "    'Bus or coach (17 or more pass seats)',\n",
    "    'Van / Goods 3.5 tonnes mgw or under',\n",
    "    'Motorcycle over 500cc',\n",
    "    'Goods over 3.5t. and under 7.5t',\n",
    "    'Agricultural vehicle',\n",
    "    'Minibus (8 - 16 passenger seats)'\n",
    "]\n",
    "\n",
    "ays = accident[\n",
    "    (accident['Vehicle_Type'].isin(heavy_vehicles)) &\n",
    "    (accident['Accident_Severity'].isin(['Fatal', 'Serious']))\n",
    "][['District Area', 'Accident_Severity']]\n",
    "\n",
    "# Count combinations\n",
    "ays.value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "07613913-cd8d-49a9-a0c2-4decea987021",
   "metadata": {},
   "source": [
    "<h2> Insights 17) : </h2> <h4> The districts area that has large amount of severe accidents (Fatal and Serious) involving heavy vehicles such as bus etc. are Birmingham District Area with 257 Serious Accidents and Westminster with 171 </h4>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "701eca9e-3682-4a72-9c05-a3af1525c0c9",
   "metadata": {},
   "source": [
    "<h2>Insights 18) : </h2><h4> Van has the most amount of severe accidents involve, that totals to 29,139. Next to it is are bus with 22,180 severe cases </h4>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4d2b437b-646a-4e2c-a9de-3376aa5320db",
   "metadata": {},
   "source": [
    "<h1>17) Compare Urban vs. Rural accident severity distributions.</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e5a219d3-a28f-4625-8f4d-4db44af8155f",
   "metadata": {},
   "outputs": [],
   "source": [
    "accident.groupby('Accident_Severity')['Urban_or_Rural_Area'].count()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2ff3ef30-aaad-4ddf-af6a-4d3869628b78",
   "metadata": {
    "jp-MarkdownHeadingCollapsed": true
   },
   "source": [
    "<h2> Insights 19): </h2> <h4>According to the data Rural places has the most Fatal accidents, whereas Urban areas have the most serious and slight severity recorded cases of accidents </h4>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5eef6875-5bdf-4348-96f9-fe9498e0a07b",
   "metadata": {},
   "source": [
    "<h1>18) Do weather conditions combined with light conditions (e.g., rain at night) show higher accident severity?</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c2c228ea-e15d-4aba-934f-3e80f2d1c1fb",
   "metadata": {},
   "outputs": [],
   "source": [
    "accident.groupby(['Light_Conditions', 'Weather_Conditions'])['Accident_Severity'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e6a73c84-d925-489c-8e33-6e634d0ffd34",
   "metadata": {},
   "outputs": [],
   "source": [
    "accident.groupby(['Light_Conditions', 'Weather_Conditions'])['Accident_Severity'].describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3b2aa49e-9035-4a4e-927d-1333cb781e01",
   "metadata": {},
   "source": [
    "<h2>Insigths 20) : </h2><h4> Weather conditions combined with poor lighting, such as rain, fog, or snow at night, lead to disproportionately higher accident severity, with darkness and lack of road lighting emerging as critical risk factors compared to similar conditions in daylight. </h4>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e039b890-ee1c-435b-aed2-781c71b573ea",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
